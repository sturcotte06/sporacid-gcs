<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- Data source informations -->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="org.postgresql.Driver" />
    <property name="url" value="jdbc:postgresql://localhost:5432/GCS" />
    <property name="username" value="postgres" />
    <property name="password" value="qazwsxedc" />
  </bean>

  <!-- Session factory bean object for hibernate -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" lazy-init="false">
    <property name="dataSource" ref="dataSource" />
    <property name="annotatedClasses">
      <list>
        <value>gcs.webservices.models.Adresse</value>
        <value>gcs.webservices.models.Audit</value>
        <value>gcs.webservices.models.Club</value>
        <value>gcs.webservices.models.Commandite</value>
        <value>gcs.webservices.models.Concentration</value>
        <value>gcs.webservices.models.Fournisseur</value>
        <value>gcs.webservices.models.Item</value>
        <value>gcs.webservices.models.Membre</value>
        <value>gcs.webservices.models.MembreClub</value>
        <value>gcs.webservices.models.Role</value>
        <value>gcs.webservices.models.Unit</value>
        <value>gcs.webservices.models.Suivie</value>
        <value>gcs.webservices.models.SuivieStatut</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.connection.pool_size">1</prop>
      </props>
    </property>
  </bean>

  <!-- A json parser. -->
  <bean id="jsonParser" class="com.google.gson.Gson" scope="prototype" />

  <!-- Application messages cache. This is where configured messages will be loaded. -->
  <bean id="messageLocalizer" name="messageLocalizer" class="gcs.webapp.utils.app.messages.MessageLocalizer" scope="singleton">
    <constructor-arg name="messagesFolderRelativePath" value="./resources" />
    <property name="defaultLocale" value="fr" />
  </bean>

  <!-- Custom security provider for the application modules -->
  <bean id="moduleSecurityProvider" name="moduleSecurityProvider" class="gcs.webapp.utils.app.security.ModuleSecurityProvider"
    scope="singleton">
    <constructor-arg name="moduleSecurityFolderRelativePath" value="./resources" />
  </bean>

  <!-- Authenticated sessions cache -->
  <bean id="sessionCache" name="sessionCache" class="gcs.webservices.sessions.SessionCache" scope="singleton">
    <!-- 24 hours of validity for a cached session -->
    <constructor-arg value="86400" />
    <property name="keyProvider">
      <bean class="gcs.webapp.utils.caching.providers.Base64KeyProvider" />
    </property>
    <property name="hashProvider">
      <bean class="gcs.webapp.utils.security.SHA512HashProvider" />
    </property>
  </bean>

  <!-- Validator factory -->
  <bean id="validatorFactory" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
    scope="singleton" />

  <!-- LDAP authenticator for authenticating users -->
  <bean id="ldapAuthenticator" name="ldapAuthenticator" class="gcs.webservices.ldap.authentication.ActiveDirectoryAuthenticator"
    scope="singleton">
    <property name="defaultUserDomain" value="ens.ad.etsmtl.ca" />
  </bean>

  <!-- Define all data access objects below -->
  <bean id="membreDao" class="gcs.webservices.dao.MembreDao" scope="singleton" />

  <bean id="auditDao" class="gcs.webservices.dao.AuditDao" scope="singleton">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <bean id="clubDao" class="gcs.webservices.dao.ClubDao" scope="singleton">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <bean id="commanditeDao" class="gcs.webservices.dao.CommanditeDao" scope="singleton">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- LDAP searcher to find user's base information -->
  <bean id="ldapSearcher" class="gcs.webservices.ldap.search.ActiveDirectorySearcher" scope="singleton">
    <!-- TODO : do not deploy with my credentials... -->
    <constructor-arg name="username" value="aj50440" />
    <constructor-arg name="password" value="AOPbgtZXD666" />
    <constructor-arg name="domainController" value="ens.ad.etsmtl.ca" />
  </bean>

  <!-- Inject the auditing service into the audit aspect -->
  <bean id="auditAspect" class="gcs.webservices.aspects.AuditAspect" factory-method="aspectOf">
    <property name="auditService" ref="auditService" />
  </bean>

  <!-- Inject a validator into the validation aspect -->
  <bean id="validationAspect" class="gcs.webapp.utils.aspects.validation.ValidationAspect" factory-method="aspectOf">
    <property name="validator" ref="validatorFactory" />
  </bean>

  <!-- Inject the session cache and the security provider into the authorization aspect. -->
  <bean id="authorizationAspect" class="gcs.webservices.aspects.AuthorizationAspect" factory-method="aspectOf">
    <property name="sessionCache" ref="sessionCache" />
    <property name="moduleSecurityProvider" ref="moduleSecurityProvider" />
  </bean>

  <!-- Internal service instance for auditing -->
  <bean id="auditService" class="gcs.webservices.aspects.services.AuditService" scope="singleton">
    <property name="auditDao" ref="auditDao" />
    <property name="sessionCache" ref="sessionCache" />
  </bean>

  <!-- Jersey services bean so jersey does not log a fatal exception. -->
  <bean id="sessionService" class="gcs.webservices.services.SessionService" scope="singleton" />
  <bean id="membreService" class="gcs.webservices.services.MembreService" scope="singleton" />
  <bean id="userService" class="gcs.webservices.services.UserService" scope="singleton" />
  <bean id="utilityService" class="gcs.webservices.services.UtilityService" scope="singleton" />
  <bean id="clubService" class="gcs.webservices.services.ClubService" scope="singleton" />
  <bean id="commanditeService" class="gcs.webservices.services.CommanditeService" scope="singleton" />
  <bean id="fournisseurService" class="gcs.webservices.services.FournisseurService" scope="singleton" />
</beans>
